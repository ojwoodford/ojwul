%EULER2ROT Computes a rotation matrix from a set of Euler angles.
% 
%   R = euler2rot(X)
%   R = euler2rot(X, type)
%
% The Euler representation is a set of 3 angles (in radians), which are
% applied about the three intrinsic axes of the frame specified.
%
%IN:
%   X - 3xM matrix of Euler angle vectors.
%   type - 1x3 character string representing the intrinsic axes the angles
%          are applied to. Default: 'xyz'.
%
%OUT:
%   R - 3x3xM rotation matrix.

function R = euler2rot(X, type)
if nargin < 2
    type = 'xyz';
end

if size(X, 1) == 1
    X = shiftdim(X, 1);
end
sz = size(X);
% Compute trig functions
c = cos(X);
s = sin(X);
% Compute matrix
switch type
    case 'zxz'
        R = [c(1,:) .* c(3,:) - c(2,:) .* s(1,:) .* s(3,:); ...
             c(3,:) .* s(1,:) + c(1,:) .* c(2,:) .* s(3,:); ...
             s(2,:) .* s(3,:); ...
             -c(1,:) .* s(3,:) - c(2,:) .* c(3,:) .* s(1,:); ...
             c(1,:) .* c(2,:) .* c(3,:) - s(1,:) .* s(3,:); ...
             c(3,:) .* s(2,:); ...
             s(1,:) .* s(2,:); ...
             -c(1,:) .* s(2,:); ...
             c(2,:)];
    case 'xyz'
        R = [c(2,:) .* c(3,:); ...
             c(1,:) .* s(3,:) + c(3,:) .* s(1,:) .* s(2,:); ...
             s(1,:) .* s(3,:) - c(1,:) .* c(3,:) .* s(2,:); ...
             -c(2,:) .* s(3,:); ...
             c(1,:) .* c(3,:) - s(1,:) .* s(2,:) .* s(3,:); ...
             c(3,:) .* s(1,:) + c(1,:) .* s(2,:) .* s(3,:); ...
             s(2,:); ...
             -c(2,:) .* s(1,:); ...
             c(1,:) .* c(2,:)];
    case 'zyx'
        R = [c(1,:) .* c(2,:); ...
             c(2,:) .* s(1,:); ...
             -s(2,:); ...
             c(1,:) .* s(2,:) .* s(3,:) - c(3,:) .* s(1,:); ...
             c(1,:) .* c(3,:) + s(1,:) .* s(2,:) .* s(3,:); ...
             c(2,:) .* s(3,:); ...
             s(1,:) .* s(3,:) + c(1,:) .* c(3,:) .* s(2,:); ...
             c(3,:) .* s(1,:) .* s(2,:) - c(1,:) .* s(3,:); ...
             c(2,:) .* c(3,:)];
    otherwise
        error('type not recognised');
end
% Reshape
R = reshape(R, [3 3 sz(2:end)]);

